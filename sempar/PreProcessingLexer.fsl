{
module PreProcessingLexer 

open FSharp.Text.Lexing
open System
open PreProcessingParser

exception SyntaxError of string

let lexeme = LexBuffer<_>.LexemeString

let newline (lexbuf: LexBuffer<_>) = 
  lexbuf.StartPos <- lexbuf.StartPos.NextLine
}

let int = ['-' '+']? ['0'-'9']+
let digit = ['0'-'9']
//let frac = '.' digit*
//let exp = ['e' 'E'] ['-' '+']? digit+
//let float = '-'? digit* frac? exp?
let word = ['a'-'z' 'A'-'Z' 'å' 'ä' 'ö' 'Å' 'Ä' 'Ö' '_' '-']+

let white = [' ' '\t']+
let maybeWhite = [' ' '\t']?
let newline = '\r' | '\n' | "\r\n"

rule read =
  parse
  | white    { read lexbuf }
  | newline  { newline lexbuf; read lexbuf }
  | ("%{" newline+)     { read_preamble_code "" lexbuf }
  | "%%"     { DOUBLEPERCENT }
  | "%"      { read_preamble_items lexbuf }
  | ("//!" maybeWhite)    { CONSTRAINT (read_until_newline "" lexbuf) }
  | "//"     { COMMENT }
  | "|"      { PIPE }
  | "{" { read_bracket "{" 0 lexbuf }
  | ":"      { COLON }
  | word { ID(lexeme lexbuf)}
  | eof      { EOF }
  | _        { raise (Exception (sprintf "SyntaxError: Unexpected char: '%s' Line: %d Column: %d" (lexeme lexbuf) (lexbuf.StartPos.Line+1) lexbuf.StartPos.Column)) }

and read_until_newline str =
  parse
  | (maybeWhite newline)     { newline lexbuf; str}
  | [^ '\r' '\n'] { read_until_newline (str+(lexeme lexbuf)) lexbuf }


and read_bracket str level = 
  parse
  | "{"         { read_bracket (str+(lexeme lexbuf)) (level+1) lexbuf }
  | "}"         { if level < 1 then CODE (str+(lexeme lexbuf)) else read_bracket (str+(lexeme lexbuf)) (level-1) lexbuf}
  | [^ '{' '}'] { read_bracket (str+(lexeme lexbuf)) level lexbuf}
  | _           { raise (Exception (sprintf "SyntaxError: Mismatched curly braces: Line: %d Column: %d" (lexbuf.StartPos.Line+1) lexbuf.StartPos.Column))}

and read_preamble_code str =
  parse
  | (newline+ "%}" )        { PREACODE (str) }
  | [^ '%']     { read_preamble_code (str+(lexeme lexbuf)) lexbuf}
  | _           { raise (Exception (sprintf "SyntaxError: Mismatched curly braces: Line: %d Column: %d" (lexbuf.StartPos.Line+1) lexbuf.StartPos.Column))}

and read_preamble_items = 
  parse
  | ("token" white)     { PREAITEM ("token", (read_until_newline "" lexbuf))}
  | ("start" white)     { PREAITEM ("start", (read_until_newline "" lexbuf))}
  | ("prec" white)      { PREAITEM ("prec", (read_until_newline "" lexbuf))}
  | ("type" white)      { PREAITEM ("type", (read_until_newline "" lexbuf))}
  | ("left" white)      { PREAITEM ("left", (read_until_newline "" lexbuf))}
  | ("right" white)     { PREAITEM ("right", (read_until_newline "" lexbuf))}
  | ("nonassoc" white)  { PREAITEM ("nonassoc", (read_until_newline "" lexbuf))}
