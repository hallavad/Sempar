%{
open ArithAST 

%}

%start expr

%token <float> NUM
%token <string> VAR
%token PLUS MINUS TIMES DIV LPAR RPAR EOF

%left PLUS MINUS TIMES DIV

%type <Diagnostics<Arith>> expr

%%

expr: 
  | LPAR expr RPAR  { $2 }
  //! warnWhen "Are you sure that you want to multiply by 0? It will be simplified." ($3 = Num 0) 
  //! warnWhen "Are you sure that you want to multiply by 1? It will be simplified." ($3 = Num 1) 
  | expr TIMES expr { Mul ($1, $3) }
  //! errorWhen "Are you sure that you want to divide by 0? It will not work." ($3 = Num 0) 
  //! warnWhen "Are you sure that you want to divide by 1? It will be simplified." ($3 = Num 1) 
  | expr DIV expr   { Div ($1, $3) }
  //! warnWhen "Are you sure that you want to add 0? It will be simplified." ($3 = Num 0) 
  | expr PLUS expr  { Add ($1, $3) }
  //! warnWhen "Are you sure that you want to subtract 0? It will be simplified." ($3 = Num 0) 
  | expr MINUS expr { Sub ($1, $3) }
  | NUM             { Num $1 }
  | VAR             { Var $1 }
