{
module Lexer

open FSharp.Text.Lexing
open System
open ArithParser

exception SyntaxError of string

let lexeme = LexBuffer<_>.LexemeString

let newline (lexbuf: LexBuffer<_>) = 
  lexbuf.StartPos <- lexbuf.StartPos.NextLine
}

let digit = ['0'-'9']
let int = ['-' '+']? digit+
let frac = '.' digit*
let exp = ['e' 'E'] ['-' '+']? digit+
let float = '-'? digit+ frac? exp?

let white = [' ' '\t']+
let newline = '\r' | '\n' | "\r\n"

let aao = ['å' 'ä' 'ö' 'Å' 'Ä' 'Ö']
let letter = ['a'-'z' 'A'-'Z'] | aao
let special = ['_' '-']
let var = letter (letter | special | digit)*

rule read =
  parse
  | white    { read lexbuf }
  | newline  { newline lexbuf; read lexbuf }
  | var      { VAR (lexeme lexbuf) }
  | float    { NUM (float (lexeme lexbuf)) }
  | '+'      { PLUS }
  | '-'      { MINUS }
  | '*'      { TIMES }
  | '/'      { DIV }
  | '('      { LPAR }
  | ')'      { RPAR }
  | eof      { EOF }
  | _ { raise (Exception (sprintf "SyntaxError: Unexpected char: '%s' Line: %d Column: %d" (lexeme lexbuf) (lexbuf.StartPos.Line+1) lexbuf.StartPos.Column)) }
